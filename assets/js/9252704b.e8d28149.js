"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8387],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return h}});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},s=Object.keys(n);for(a=0;a<s.length;a++)t=s[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(a=0;a<s.length;a++)t=s[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var u=a.createContext({}),l=function(n){var e=a.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=l(n.components);return a.createElement(u.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,s=n.originalType,u=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),m=l(t),h=r,g=m["".concat(u,".").concat(h)]||m[h]||c[h]||s;return t?a.createElement(g,i(i({ref:e},p),{},{components:t})):a.createElement(g,i({ref:e},p))}));function h(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var s=t.length,i=new Array(s);i[0]=m;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=n,o.mdxType="string"==typeof n?n:r,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},47864:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var a=t(83117),r=t(80102),s=(t(67294),t(3905)),i=["components"],o={id:"github-actions-example",slug:"github-actions-example",title:"github actions\u793a\u4f8b",date:new Date("2021-10-01T00:00:00.000Z"),authors:"kuizuo",tags:["github","action"],keywords:["github","action"]},u=void 0,l={unversionedId:"skill/other/git/github-actions-example",id:"skill/other/git/github-actions-example",title:"github actions\u793a\u4f8b",description:"GitHub Marketplace \xb7 Actions to improve your workflow",source:"@site/docs/skill/other/git/github actions\u793a\u4f8b.md",sourceDirName:"skill/other/git",slug:"/skill/other/git/github-actions-example",permalink:"/docs/skill/other/git/github-actions-example",draft:!1,tags:[{label:"github",permalink:"/docs/tags/github"},{label:"action",permalink:"/docs/tags/action"}],version:"current",frontMatter:{id:"github-actions-example",slug:"github-actions-example",title:"github actions\u793a\u4f8b",date:"2021-10-01T00:00:00.000Z",authors:"kuizuo",tags:["github","action"],keywords:["github","action"]}},p={},c=[{value:"\u6d4b\u8bd5 \u8f93\u51fa",id:"\u6d4b\u8bd5-\u8f93\u51fa",level:2},{value:"\u524d\u7aef\u9879\u76ee\u4ee3\u7801 lint \u4e0e test",id:"\u524d\u7aef\u9879\u76ee\u4ee3\u7801-lint-\u4e0e-test",level:2},{value:"\u53d1\u5e03\u5230 GitHub Pages",id:"\u53d1\u5e03\u5230-github-pages",level:2},{value:"ssh \u90e8\u7f72",id:"ssh-\u90e8\u7f72",level:2},{value:"ftp \u6587\u4ef6\u4f20\u8f93",id:"ftp-\u6587\u4ef6\u4f20\u8f93",level:2},{value:"\u53d1\u5e03 release / npm \u5305",id:"\u53d1\u5e03-release--npm-\u5305",level:2},{value:"\u6dfb\u52a0\u72b6\u6001\u5fbd\u7ae0 status badge",id:"\u6dfb\u52a0\u72b6\u6001\u5fbd\u7ae0-status-badge",level:2}],m={toc:c};function h(n){var e=n.components,t=(0,r.Z)(n,i);return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/marketplace?type=actions"},"GitHub Marketplace \xb7 Actions to improve your workflow")),(0,s.kt)("h2",{id:"\u6d4b\u8bd5-\u8f93\u51fa"},"\u6d4b\u8bd5 \u8f93\u51fa"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.github.com/cn/actions/learn-github-actions/environment-variables"},"Environment variables - GitHub Docs")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.github.com/cn/actions/learn-github-actions/contexts#github-context"},"Contexts - GitHub Docs")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='print.yml'",title:"'print.yml'"},"name: Print\non: push\n\njobs:\n  print-job:\n    name: Print Job\n    runs-on: ubuntu-latest\n    steps:\n    - name: Print a greeting\n      env:\n        MY_VAR: Hi there! My name is\n        NAME: Kuizuo\n      run: |\n        echo $MY_VAR $NAME.\n\n    - name: Print github info\n      run: |\n        echo github owner: ${{ github.repository_owner }}\n        echo github repository: ${{ github.repository }}\n        echo github workspace ${{ github.workspace }}\n\n")),(0,s.kt)("h2",{id:"\u524d\u7aef\u9879\u76ee\u4ee3\u7801-lint-\u4e0e-test"},"\u524d\u7aef\u9879\u76ee\u4ee3\u7801 lint \u4e0e test"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/setup-node-js-environment"},"Setup Node.js environment \xb7 Actions \xb7 GitHub Marketplace")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='lint.yml'",title:"'lint.yml'"},"name: Lint\n\non:\n  push:\n    branches:\n      - main\n\n  pull_request:\n    branches:\n      - main\n\njobs:\n  lint:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Install pnpm\n        uses: pnpm/action-setup@v2\n\n      - name: Set node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 16.x\n          cache: pnpm\n\n      - name: Setup\n        run: npm i -g @antfu/ni\n\n      - name: Install\n        run: nci\n\n      - name: Lint\n        run: nr lint\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='test.yml'",title:"'test.yml'"},"name: Test\n\non:\n  push:\n    branches:\n      - main\n\n  pull_request:\n    branches:\n      - main\n\njobs:\n  test:\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        node: [14.x, 16.x]\n        os: [ubuntu-latest]\n      fail-fast: false\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Install pnpm\n        uses: pnpm/action-setup@v2\n\n      - name: Set node ${{ matrix.node }}\n        uses: actions/setup-node@v3\n        with:\n          node-version: ${{ matrix.node }}\n          cache: pnpm\n\n      - run: corepack enable\n\n      - name: Setup\n        run: npm i -g @antfu/ni\n\n      - name: Install\n        run: nci\n\n      - name: Build\n        run: nr build\n\n      - name: Test\n        run: nr test\n\n      - name: Typecheck\n        run: nr typecheck\n")),(0,s.kt)("p",null,"\u4e5f\u53ef\u5c06 jobs \u6574\u5408\u5728\u4e00\u4e2a\u6587\u4ef6\u5185"),(0,s.kt)("h2",{id:"\u53d1\u5e03\u5230-github-pages"},"\u53d1\u5e03\u5230 GitHub Pages"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/github-pages-action"},"GitHub Pages action")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Build and Deploy\non:\n  push:\n    branches:\n      - main\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      - name: Install and Build\n        run: |\n          yarn install\n          yarn run build\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          personal_token: ${{ secrets.ACCESS_TOKEN }}\n          publish_dir: ./dist\n")),(0,s.kt)("p",null,"publish_dir \u4e3a\u6253\u5305\u540e\u7684\u6587\u4ef6\u5939."),(0,s.kt)("h2",{id:"ssh-\u90e8\u7f72"},"ssh \u90e8\u7f72"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/ssh-deploy"},"ssh deploy \xb7 Actions \xb7 GitHub Marketplace")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"name: ci\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      - name: Use Node.js 16\n        uses: actions/setup-node@v3\n        with:\n          node-version: '16.x'\n\n      - name: Build Project\n        run: |\n          yarn install\n          yarn run build\n\n      - name: SSH Deploy\n        uses: easingthemes/ssh-deploy@v2.2.11\n        env:\n          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}\n          ARGS: '-avzr --delete'\n          SOURCE: 'build'\n          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}\n          REMOTE_USER: 'root'\n          TARGET: '/www/wwwroot/blog'\n")),(0,s.kt)("p",null,"SSH_PRIVATE_KEY \u662f SSH \u5bc6\u94a5\uff0c\u53ef\u901a\u8fc7 ",(0,s.kt)("inlineCode",{parentName:"p"},"ssh-keygen")," \uff08\u751f\u6210\u4f4d\u7f6e/root/.ssh\uff09\u6216\u901a\u8fc7\u670d\u52a1\u5668\u7ba1\u7406\u9762\u677f\u7684\u6765\u751f\u6210\u5bc6\u94a5\u3002\u540e\u8005\u7684\u8bdd\u9700\u8981\u7ed1\u5b9a\u670d\u52a1\u5668\u5b9e\u4f8b\uff0c\u5e76\u4e14\u9700\u8981\u5173\u673a\uff0c\u6211\u4e2a\u4eba\u63a8\u8350\u4f7f\u7528\u540e\u8005\u3002"),(0,s.kt)("h2",{id:"ftp-\u6587\u4ef6\u4f20\u8f93"},"ftp \u6587\u4ef6\u4f20\u8f93"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"      - name: FTP Deploy\n        uses: SamKirkland/FTP-Deploy-Action@4.0.0\n        with:\n          server: ${{ secrets.ftp_server }}\n          username: ${{ secrets.ftp_user }}\n          password: ${{ secrets.ftp_pwd }}\n          local-dir: ./build/\n          server-dir: ./\n")),(0,s.kt)("h2",{id:"\u53d1\u5e03-release--npm-\u5305"},"\u53d1\u5e03 release / npm \u5305"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/changesets/action"},"changesets/action (github.com)")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='release.yml'",title:"'release.yml'"},"name: Release\n\non:\n  push:\n    tags:\n      - 'v*'\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n\n      - name: Install pnpm\n        uses: pnpm/action-setup@v2\n\n      - name: Set node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 16.x\n          cache: pnpm\n          registry-url: 'https://registry.npmjs.org'\n\n      - run: npx changelogithub\n        continue-on-error: true\n        env:\n          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\n\n      - name: Install Dependencies\n        run: pnpm i\n\n      - name: PNPM build\n        run: pnpm run build\n\n      - name: Publish to NPM\n        run: pnpm -r publish --access public --no-git-checks\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}\n\n      - name: Publish to VSCE & OVSX\n        run: npm run publish\n        working-directory: ./packages/vscode\n        env:\n          VSCE_TOKEN: ${{secrets.VSCE_TOKEN}}\n          OVSX_TOKEN: ${{secrets.OVSX_TOKEN}}\n")),(0,s.kt)("h2",{id:"\u6dfb\u52a0\u72b6\u6001\u5fbd\u7ae0-status-badge"},"\u6dfb\u52a0\u72b6\u6001\u5fbd\u7ae0 status badge"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/adding-a-workflow-status-badge"},"Adding a workflow status badge - GitHub Docs")),(0,s.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6d41\u4f1a\u81ea\u52a8\u751f\u6210\u72b6\u6001\u5fbd\u7ae0\uff0c\u5730\u5740\u5982\u4e0b"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"https://github.com/<OWNER>/<REPOSITORY>/actions/workflows/<WORKFLOW_FILE>/badge.svg\n")),(0,s.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"https://github.com/kuizuo/github-action-example/actions/workflows/ci.yml/badge.svg\n")))}h.isMDXComponent=!0}}]);